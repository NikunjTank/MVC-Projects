@model Vidly.ViewModels.MovieFormViewModel



<h2>@ViewBag.Title</h2>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<br />
@*@using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Movie</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.GenreId, "GenreId", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("GenreId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.GenreId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DateAdded, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DateAdded, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DateAdded, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
                @Html.LabelFor(model => model.ReleaseDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ReleaseDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ReleaseDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NumberInStock, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NumberInStock, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NumberInStock, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }*@


@*@Html.ActionLink("your text", "actionName", "controllerName")*@
@using (Html.BeginForm("Save", "Movies", FormMethod.Post))
{
    //Name , ReleaseDate, Genre, Number In Stock
    <div class="form-group">
        @Html.LabelFor(m => m.Movie.Name)
        @Html.TextBoxFor(m => m.Movie.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Movie.Name, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Movie.DateAdded)
        @Html.TextBoxFor(m => m.Movie.DateAdded, "{0:d MMM yyyy}", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Movie.DateAdded, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Movie.Genre)
        @Html.DropDownListFor(m => m.Movie.GenreId, new SelectList(Model.Genres, "Id", "Name"), "Select Genre", new { @id = "myid", @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Movie.Genre, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Movie.NumberInStock)
        @Html.TextBoxFor(m => m.Movie.NumberInStock, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Movie.NumberInStock, "", new { @class = "text-danger" })
    </div>

    <br />

    @Html.HiddenFor(m => m.Movie.Id)
    <button type="submit" class="btn btn-primary">Save</button>
}

@*@Html.HiddenFor(m => m.Movies.GenreId)*@
<br />
<br />

@*@using (Html.BeginForm("Save", "Movies", FormMethod.Post))
    {
    <div>
        <input type="text" class="form-control" name="Name" id="Name" placeholder="Enter Movie Name">
    </div>
    <div>
        <input type="text" class="form-control" name="DateAdded" id="DateAdded" placeholder="Enter Date">
    </div>
    <div>
        <input type="text" class="form-control" name="Genre" id="Genre" placeholder="Enter Genre">
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Movie.Genre)
        @Html.DropDownListFor(m => m.Movie.GenreId, new SelectList(Model.Genres, "Id", "Name"), "Select Genre", new { @class = "form-control" })

    </div>
        <div>
            <input type="text" class="form-control" name="NumberInStock" id="NumberInStock" placeholder="Enter Number">
        </div>

        <input type="submit" class="btn btn-default" value="Submit" />
    }*@


<div>
    @Html.ActionLink("Back to List", "Index")
</div>




@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
}